---
- hosts: localhost
  connection: local
  gather_facts: false

  vars_files:
    - vars.yml

  tasks:
    - name: Provision a set of instances
      profitbricks:
         datacenter: "{{ datacenter }}"
         name: server%02d
         auto_increment: true
         cores: 1
         ram: 2048
         availability_zone: ZONE_1
         volume_availability_zone: ZONE_3
         volume_size: 5
         cpu_family: AMD_OPTERON
         disk_type: HDD
         image: "{{ image }}"
         image_password: "{{ image_password }}"
         location: "{{ location }}"
         count: 1
         assign_public_ip: true
         remove_boot_volume: true
         wait: true
         wait_timeout: "{{ timeout }}"
         state: present
      register: profitbricks

    - debug: msg="{{profitbricks.machines}}"

    - name: Wait for SSH
      wait_for:
          port: 22
          host: "{{ item.public_ip }}"
          search_regex: OpenSSH
          delay: 10
      with_items: "{{ profitbricks.machines }}"

    - name: Update first machine with more CPU and less RAM
      profitbricks:
         datacenter: "{{ datacenter }}"
         name: server01
         auto_increment: true
         cores: 2
         ram: 1024
         cpu_family: AMD_OPTERON
         location: "{{ location }}"
         wait: true
         wait_timeout: "{{ timeout }}"
         state: present
      register: profitbricks_update

    - debug: msg="{{profitbricks_update.machines}}"

    # - name: Add servers to servers host group
    #   add_host:
    #      hostname: "{{ item.properties.name }}"
    #      ansible_ssh_host: "{{ item.public_ip }}"
    #      ansible_ssh_user: root
    #      ansible_ssh_pass: password
    #      groupname: servers
    #   with_items: "{{ profitbricks.machines }}"
    #   when: profitbricks.action == 'create'

    - name: Remove a set of instances
      profitbricks:
         datacenter: "{{ datacenter }}"
         instance_ids:
           - 'server01'
           - 'server02'
         remove_boot_volume: yes
         wait_timeout: "{{ timeout }}"
         state: absent
